{"version":3,"sources":["../../src/renderer/Room.jsx"],"names":["ROOM_STYLE","padding","Room","props","state","description","messages","db","database","handleMessagePost","bind","console","log","params","roomId","fetchRoom","nextProps","stream","off","setState","setTimeout","room","parentNode","scrollTop","scrollHeight","message","newItemRef","fbChatRoomRef","child","push","user","auth","currentUser","update","writtenBy","uid","displayName","photoURL","time","Date","now","text","ref","once","then","snapshot","val","window","document","title","limitToLast","on","Object","assign","key","item","map","m","Component"],"mappings":"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","file":"Room.js","sourcesContent":["import React from \"react\";\nimport Message from \"./Message\";\nimport NewMessage from \"./NewMessage\";\nimport firebase from \"firebase/firebase-browser\";\n\nconst ROOM_STYLE = {\n\tpadding: \"10px 30px\"\n}\n\nexport default class Room extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\tdescription: \"\",\n\t\t\tmessages: []\n\t\t};\n\t\tthis.db = firebase.database();\n\t\tthis.handleMessagePost = this.handleMessagePost.bind(this);\n\t}\n\t\n\tcomponentDidMount() {\n\t\tconsole.log(\"kiteru?\")\n\t\tconsole.log(this.props.params);\n\t\tconst { roomId } = this.props.params;\n\t\t// コンポーネント初期化時にチャットルームの詳細情報を取得\n\t\tthis.fetchRoom(roomId);\n\t}\n\t\n\tcomponentWillReceiveProps(nextProps) {\n\t\tconsole.log(nextProps);\n\t\tconst { roomId } = nextProps.params;\n\t\tif (roomId === this.props.params.roomId) {\n\t\t// チャットルームのIDに変更がなければ何もしない\n\t\treturn;\n\t\t}\n\t\t\n\t\tif (this.stream) {\n\t\t//  メッセージの監視を解除\n\t\t\tthis.stream.off();\n\t\t}\n\t\t// stateの再初期化\n\t\tthis.setState({ messages: []});\n\t\t// チャットルーム詳細の再取得\n\t\tthis.fetchRoom(roomId);\n\t}\n\t\n\tcomponentDidUpdate() {\n\t\tsetTimeout(() => {\n\t\t// 画面下端へスクロール\n\t\t\tthis.room.parentNode.scrollTop  = this.room.parentNode.scrollHeight;\n\t\t}, 0);\n\t}\n\t\n\tcomponentWillUnmount() {\n\t\tif(this.stream) {\n\t\t\t// メッセージの監視を解除\n\t\t\tthis.stream.off();\n\t\t}\n\t}\n\t\n\t// メッセージの投稿処理\n\thandleMessagePost(message) {\n\t\tconst newItemRef = this.fbChatRoomRef.child(\"messages\").push();\n\t\t// Firebaseにログインしているユーザーを投稿ユーザーとして利用\n\t\tthis.user = this.user || firebase.auth().currentUser;\n\t\treturn newItemRef.update({writtenBy: {\n\t\t\tuid: this.user.uid,\n\t\t\tdisplayName: this.user.displayName,\n\t\t\tphotoURL: this.user.photoURL,\n\t\t\t},\n\t\t\ttime: Date.now(),\n\t\t\ttext: message\n\t\t});\n\t}\n\t\n\tfetchRoom(roomId) {\n\t\t// Firebaseデータベースからチャットルーム詳細データの参照を取得\n\t\tthis.fbChatRoomRef = this.db.ref(\"/chatrooms/\" + roomId);\n\t\tthis.fbChatRoomRef.once(\"value\").then(snapshot => {\n\t\tconst { description } = snapshot.val();\n\t\t\tthis.setState({ description });\n\t\t\twindow.document.title = description;\n\t\t});\n\t\tthis.stream = this.fbChatRoomRef.child(\"messages\").limitToLast(10);\n\t\t// チャットルームのメッセージ追加を監視\n\t\tthis.stream.on(\"child_added\", item => {\n\t\tconst { messages } = this.state || [];\n\t\t\t// 追加されたメッセージをstateにセット\n\t\t\tmessages.push(Object.assign({ key: item.key}, item.val()));\n\t\t\tthis.setState({ messages });\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { messages } = this.state;\n\t\treturn (\n\t\t\t<div style={ROOM_STYLE} ref={room => this.room = room}>\n\t\t\t\t<div className=\"list-group\">\n\t\t\t\t\t{messages.map(m => <Message key={m.key} message={m}/>)}\n\t\t\t\t</div>\n\t\t\t\t<NewMessage onMessagePost={this.handleMessagePost} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]}